#!/usr/bin/env python3

import requests, argparse

from scraper.page_processor import PageProcessor
from scraper.article_scraper import GoogleScraper
from nlp.nlp import NLProcessor

from definitions import NEGATIVE_QUERIES

if __name__ == "__main__":
    parser = argparse.ArgumentParser(prog="scraper")
    parser.add_argument("-n", "--narticles", type=int, action="store", default=0)
    args = parser.parse_args()
    from database.mock_database import DatabaseNegative

    for query in NEGATIVE_QUERIES:
        print("scraping for query [{}]".format(query))
        urls = GoogleScraper.find_news_urls_for_query(query, args.narticles)
        print("scraped {} urls for query".format(len(urls)))
        for url in urls:
            print("requesting url [{}]".format(url))
            page = requests.get(url).text
            processor = PageProcessor(page)
            summarization = "".join(NLProcessor.summarize(processor.get_fulltext()))
            DatabaseNegative.insert((url, summarization, query))
    print("DONE")
    GoogleScraper.quit()
